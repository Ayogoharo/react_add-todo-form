{"version":3,"sources":["api/users.ts","api/todos.ts","components/UserInfo/UserInfo.tsx","components/TodoInfo/TodoInfo.tsx","components/TodoList/TodoList.tsx","App.tsx","index.tsx"],"names":["id","name","username","email","title","completed","userId","UserInfo","user","className","href","TodoInfo","todo","todoUser","usersFromServer","find","classNames","TodoList","todos","map","App","useState","todosFromServer","setTodos","inputValue","setInputValue","inputError","setInputError","selectedUserId","setSelectedUserId","userError","setUserError","onSubmit","event","preventDefault","currentTodos","Math","max","type","placeholder","value","onChange","target","disabled","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.dcb7dccb.chunk.js","sourcesContent":["export default [\n  {\n    id: 1,\n    name: 'Leanne Graham',\n    username: 'Bret',\n    email: 'Sincere@april.biz',\n  },\n  {\n    id: 2,\n    name: 'Ervin Howell',\n    username: 'Antonette',\n    email: 'Shanna@melissa.tv',\n  },\n  {\n    id: 3,\n    name: 'Clementine Bauch',\n    username: 'Samantha',\n    email: 'Nathan@yesenia.net',\n  },\n  {\n    id: 4,\n    name: 'Patricia Lebsack',\n    username: 'Karianne',\n    email: 'Julianne.OConner@kory.org',\n  },\n  {\n    id: 5,\n    name: 'Chelsey Dietrich',\n    username: 'Kamren',\n    email: 'Lucio_Hettinger@annie.ca',\n  },\n  {\n    id: 6,\n    name: 'Mrs. Dennis Schulist',\n    username: 'Leopoldo_Corkery',\n    email: 'Karley_Dach@jasper.info',\n  },\n  {\n    id: 7,\n    name: 'Kurtis Weissnat',\n    username: 'Elwyn.Skiles',\n    email: 'Telly.Hoeger@billy.biz',\n  },\n  {\n    id: 8,\n    name: 'Nicholas Runolfsdottir V',\n    username: 'Maxime_Nienow',\n    email: 'Sherwood@rosamond.me',\n  },\n  {\n    id: 9,\n    name: 'Glenna Reichert',\n    username: 'Delphine',\n    email: 'Chaim_McDermott@dana.io',\n  },\n  {\n    id: 10,\n    name: 'Clementina DuBuque',\n    username: 'Moriah.Stanton',\n    email: 'Rey.Padberg@karina.biz',\n  },\n];\n","export default [\n  {\n    id: 1,\n    title: 'delectus aut autem',\n    completed: true,\n    userId: 1,\n  },\n  {\n    id: 15,\n    title: 'some other todo',\n    completed: false,\n    userId: 1,\n  },\n  {\n    id: 2,\n    title: 'quis ut nam facilis et officia qui',\n    completed: false,\n    userId: 4,\n  },\n];\n","import { User } from '../../types/User';\n\ninterface Props {\n  user: User;\n}\n\nexport const UserInfo: React.FC<Props> = ({ user }) => {\n  return (\n    <a className=\"UserInfo\" href={`mailto:${user.email}`}>\n      {user.name}\n    </a>\n  );\n};\n","import classNames from 'classnames';\n\nimport usersFromServer from '../../api/users';\nimport { UserInfo } from '../UserInfo';\nimport { Todo } from '../../types/Todo';\nimport { User } from '../../types/User';\n\ninterface Props {\n  todo: Todo;\n}\n\nexport const TodoInfo: React.FC<Props> = ({ todo }) => {\n  const todoUser = usersFromServer.find(\n    (user: User) => user.id === todo.userId,\n  );\n\n  return (\n    <article\n      data-id={todo.id}\n      className={classNames(\n        'TodoInfo',\n        { 'TodoInfo--completed': todo.completed },\n      )}\n    >\n      <h2 className=\"TodoInfo__title\">\n        {todo.title}\n      </h2>\n\n      {todoUser && <UserInfo user={todoUser} />}\n    </article>\n  );\n};\n","import { Todo } from '../../types/Todo';\nimport { TodoInfo } from '../TodoInfo';\n\ninterface Props {\n  todos: Todo[];\n}\n\nexport const TodoList: React.FC<Props> = ({ todos }) => {\n  return (\n    <section className=\"TodoList\">\n      {todos.map(todo => (\n        <TodoInfo key={todo.id} todo={todo} data-id={todo.id} />\n      ))}\n    </section>\n  );\n};\n","import { useState } from 'react';\n\nimport './App.scss';\nimport usersFromServer from './api/users';\nimport todosFromServer from './api/todos';\nimport { TodoList } from './components/TodoList';\nimport { Todo } from './types/Todo';\n\nexport const App = () => {\n  const [todos, setTodos] = useState<Todo[]>(todosFromServer);\n  const [inputValue, setInputValue] = useState('');\n  const [inputError, setInputError] = useState(false);\n  const [selectedUserId, setSelectedUserId] = useState(0);\n  const [userError, setUserError] = useState(false);\n\n  function handleSubmit(event: React.FormEvent) {\n    event.preventDefault();\n\n    if (!inputValue) {\n      setInputError(true);\n    }\n\n    if (!selectedUserId) {\n      setUserError(true);\n    }\n\n    if (inputValue && selectedUserId) {\n      setTodos((currentTodos) => [...currentTodos, {\n        id: Math.max(...todos.map(todo => todo.id)) + 1,\n        title: inputValue,\n        completed: false,\n        userId: selectedUserId,\n      }]);\n      setInputValue('');\n      setSelectedUserId(0);\n      setUserError(false);\n      setInputError(false);\n    }\n  }\n\n  return (\n    <div className=\"App\">\n      <h1>Add todo form</h1>\n\n      <form\n        onSubmit={handleSubmit}\n      >\n        <div className=\"field\">\n          Title:&nbsp;\n\n          <input\n            type=\"text\"\n            data-cy=\"titleInput\"\n            placeholder=\"Enter a title\"\n            value={inputValue}\n            onChange={(event) => {\n              setInputValue(event.target.value);\n              setInputError(false);\n            }}\n          />\n\n          {inputError && (<span className=\"error\">Please enter a title</span>)}\n        </div>\n\n        <div className=\"field\">\n          User:&nbsp;\n\n          <select\n            data-cy=\"userSelect\"\n            value={selectedUserId}\n            onChange={event => {\n              setSelectedUserId(+event.target.value);\n              setUserError(false);\n            }}\n          >\n            <option value=\"0\" disabled>Choose a user</option>\n\n            {usersFromServer.map((user) => (\n              <option key={user.id} value={user.id}>{user.name}</option>\n            ))}\n          </select>\n\n          {userError && (<span className=\"error\">Please choose a user</span>)}\n        </div>\n\n        <button type=\"submit\" data-cy=\"submitButton\">\n          Add\n        </button>\n      </form>\n\n      <TodoList todos={todos} />\n    </div>\n  );\n};\n","import ReactDOM from 'react-dom';\nimport { App } from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}